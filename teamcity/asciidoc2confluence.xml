<?xml version="1.0" encoding="UTF-8"?>
<meta-runner name="Asciidoc Convert &amp; Publish to Confluence Server">
    <description>asciidoc2confluence tool interface</description>
    <settings>
        <parameters>
            <param name="env.URL" value="" />
            <param name="env.USER" value="" />
            <param name="env.PASSWORD" value="" spec="password display='normal'" />
            <param name="env.CLEAN_SPACE" value="" />
            <param name="env.FORCED_CLEANUP" value="" />
            <param name="env.PUBLISH" value="" />
            <param name="env.SPACE" value="" />
            <param name="env.DIR" value="" />
            <param name="env.FILE" value="" />
            <param name="env.LOGLEVEL" value="" />
        </parameters>
        <build-runners>
            <runner name="Get Latest asciidoc2confluence.jar" type="simpleRunner">
                <parameters>
                    <param name="script.content"><![CDATA[URL="$(curl -s https://api.github.com/repos/dxfeed/asciidoc2confluence/releases/latest | grep "browser_download_url.*tar.gz" | cut -d : -f 2,3 | tr -d \")"
curl -s -L --url $URL | tar xvz]]></param>
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Convert &amp; Publish" type="simpleRunner">
                <parameters>
                    <param name="script.content"><![CDATA[#!/usr/bin/env bash

function process_directory() {
   java -jar asciidoc2confluence.jar \
        --url=$URL --user=$USER      \
        --pass=$PASSWORD             \
        --dir="$1"                   \
        $FLAGS
}
function process_file() {
   java -jar asciidoc2confluence.jar \
        --url=$URL --user=$USER      \
        --pass=$PASSWORD             \
        --input="$1"                 \
        $FLAGS
}
function simple_run() {
   java -jar asciidoc2confluence.jar \
        --url=$URL --user=$USER      \
        --pass=$PASSWORD             \
        $FLAGS
}

# check mandatory arguments
if [ -z "$URL" ]; then
  echo "error: URL not set"
  exit 1
fi
if [ -z "$USER" ]; then
  echo "error: USER not set"
  exit 2
fi
if [ -z "$PASSWORD" ]; then
  echo "error: PASSWORD not set"
  exit 3
fi

# set run arguments
FLAGS=""

if [ -n "$LOGLEVEL" ]; then
    export LOGLEVEL=$LOGLEVEL
else
    export LOGLEVEL=INFO
fi

if [ -n "$CLEAN_SPACE" ]; then
   FLAGS="$FLAGS --clean=$(echo $CLEAN_SPACE | tr -d ' ')"
fi

if [ $FORCED_CLEANUP ]; then
   FLAGS="$FLAGS --force"
fi

if [ -n "$SPACE" ]; then
   FLAGS="$FLAGS --space=$SPACE"
fi

#if [ $PUBLISH ]; then
#    if [ -n "$DIR" ]; then
#       FLAGS="$FLAGS --dir=\"$DIR\""
#    elif [ -n "$FILE" ]; then
#       FLAGS="$FLAGS --input=\"$FILE\""
#    fi
#fi


echo $FLAGS --file="$FILE" --dir="$DIR"


if [ $PUBLISH ]; then
    if [ -n "$DIR" ]; then
       process_directory "$DIR"
    elif [ -n "$FILE" ]; then
       process_file "$FILE"
    else
       simple_run
    fi
else
    simple_run
fi]]></param>
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Print Logs" type="simpleRunner">
                <parameters>
                    <param name="script.content" value="cat *.log" />
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
            <runner name="Clean Up Workdir" type="simpleRunner">
                <parameters>
                    <param name="script.content" value="rm -rf *" />
                    <param name="teamcity.step.mode" value="default" />
                    <param name="use.custom.script" value="true" />
                </parameters>
            </runner>
        </build-runners>
        <requirements />
    </settings>
</meta-runner>